" Force utf-8
scriptencoding utf-8
set encoding=utf-8

" vim-plug plugin manager
call plug#begin('~/.vim/plugged')
Plug 'altercation/vim-colors-solarized'
Plug 'scrooloose/nerdtree'
Plug 'mhinz/vim-grepper'
Plug 'kien/ctrlp.vim'
Plug 'valloric/youcompleteme'
Plug 'shougo/vimproc.vim'
Plug 'idanarye/vim-vebugger'
Plug 'w0rp/ale'
Plug 'posva/vim-vue'
Plug 'tpope/vim-surround'
call plug#end()

let mapleader = " "

" Syntax highlighting; don't clobber existing highlighting
if !exists("g:syntax_on")
    syntax enable
endif

" Recursively look for files using 'find'
set path+=**

" Color scheme
set background=dark
silent! colo desert
silent! colo solarized

" Tab width; backspace properly removes a tab
set tabstop=4
set shiftwidth=4
set softtabstop=4

" Tab key inserts spaces
set expandtab

set smarttab
set autoindent
set smartindent

" Language specific indentation
autocmd FileType yaml setlocal ts=2 sw=2 sts=2
autocmd FileType go setlocal noexpandtab

" Don't write backup files
set nobackup
set nowritebackup
set noswapfile

" Make backspace behave normally
set backspace=indent,eol,start

" Horizontal movement wraps when at the start or end of a line
set whichwrap+=<,>,h,l

" Show line numbers
set number

" Display extra whitespace
set list listchars=tab:»·,trail:·,nbsp:·

" Make it obvious where 80 characters is
set textwidth=80
set colorcolumn=+1

" Key sequence timeouts
set timeoutlen=500
set ttimeoutlen=0

" Open new split panes to right and bottom, which feels more natural
set splitbelow
set splitright

" Quicker window movement
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l

" Tab navigation
nnoremap th :tabfirst<cr>
nnoremap tj :tabnext<cr>
nnoremap tk :tabprev<cr>
nnoremap tl :tablast<cr>
nnoremap td :tabclose<cr>
nnoremap tt :tabedit<Space>
nnoremap tf :tabfind<Space>

" Multi-file search; Don't jump to first result
nnoremap \ :Grepper -tool ack<cr>

" Highlight search results
set hlsearch

" Search as characters are entered
set incsearch

" Ignore case when searching
set ignorecase

" Set to auto read when a file is changed from the outside
set autoread

" Visual autocomplete for command menu
set wildmenu

" Lines from screen edge when vertical scrolling starts
set so=5

" Open NERDTree
map <C-n> :NERDTreeToggle<cr>

" Disable error sounds
set noeb vb t_vb=

let NERDTreeShowHidden=1

let g:ale_fixers = {}
let g:ale_fixers['javascript'] = ['prettier']
let g:ale_fixers['python'] = ['yapf']
let g:ale_fixers['go'] = ['gofmt']
let g:ale_fix_on_save = 1
let g:ale_javascript_prettier_use_local_config = 1

nnoremap <leader>g :YcmCompleter GoTo<cr>
